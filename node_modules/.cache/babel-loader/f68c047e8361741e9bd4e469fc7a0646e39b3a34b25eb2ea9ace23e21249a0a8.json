{"ast":null,"code":"var _jsxFileName = \"/Users/navaneethsathyan/Desktop/travel_advisor/src/components/Map/Map.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport { Paper, Typography, useMediaQuery } from \"@material-ui/core\";\nimport LocationOnOutlined from \"@material-ui/icons/LocationOnOutlined\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport useStyles from \"./styles.js\";\nimport { DisabledByDefault } from \"@mui/icons-material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map({\n  setCoordinates,\n  setBounds,\n  coordinates,\n  places,\n  setChildClicked,\n  weatherData\n}) {\n  _s();\n  var _weatherData$list;\n  const classes = useStyles();\n  const isDesktop = useMediaQuery('(min-width: 600px)');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.mapContainer,\n    children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: 'AIzaSyASOkRIRbXtXgPUxtpKGKORkNZ2-mTvrZQ'\n      },\n      defaultCenter: coordinates,\n      center: coordinates,\n      defaultZoom: 14,\n      margin: [50, 50, 50, 50],\n      options: '',\n      onChange: event => {\n        setCoordinates({\n          lat: event.center.lat,\n          lng: event.center.lng\n        });\n        setBounds({\n          ne: event.marginBounds.ne,\n          sw: event.marginBounds.sw\n        });\n      },\n      onChildClick: child => {\n        setChildClicked(child);\n      },\n      children: [places === null || places === void 0 ? void 0 : places.map((place, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.markerContainer,\n        lat: Number(place.latitude),\n        lng: Number(place.longitude),\n        children: !isDesktop ? /*#__PURE__*/_jsxDEV(LocationOnOutlined, {\n          color: \"primary\",\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"subtitle2\",\n            className: classes.typography,\n            children: place.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: classes.pointer,\n            src: place.photo ? place.photo.images.large.url : 'https://images.pexels.com/photos/262978/pexels-photo-262978.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n            alt: place.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Rating, {\n            size: \"small\",\n            value: Number(place.rating),\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 33\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)), weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$list = weatherData.list) === null || _weatherData$list === void 0 ? void 0 : _weatherData$list.map((data, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        lat: data.coord.lat,\n        lng: data.coord.lon,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_s(Map, \"R9dAniB5mzfvorVxr1N507GWEyM=\", false, function () {\n  return [useStyles, useMediaQuery];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","GoogleMapReact","Paper","Typography","useMediaQuery","LocationOnOutlined","Rating","useStyles","DisabledByDefault","jsxDEV","_jsxDEV","Map","setCoordinates","setBounds","coordinates","places","setChildClicked","weatherData","_s","_weatherData$list","classes","isDesktop","className","mapContainer","children","bootstrapURLKeys","key","defaultCenter","center","defaultZoom","margin","options","onChange","event","lat","lng","ne","marginBounds","sw","onChildClick","child","map","place","i","markerContainer","Number","latitude","longitude","color","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","elevation","paper","gutterBottom","variant","typography","name","pointer","src","photo","images","large","url","alt","size","value","rating","readOnly","list","data","coord","lon","weather","icon","_c","$RefreshReg$"],"sources":["/Users/navaneethsathyan/Desktop/travel_advisor/src/components/Map/Map.jsx"],"sourcesContent":["import React from \"react\";\n\nimport GoogleMapReact from \"google-map-react\";\nimport { Paper, Typography, useMediaQuery } from \"@material-ui/core\";\nimport LocationOnOutlined from \"@material-ui/icons/LocationOnOutlined\";\nimport Rating from \"@material-ui/lab/Rating\";\n\nimport useStyles from \"./styles.js\";\nimport { DisabledByDefault } from \"@mui/icons-material\";\n\nfunction Map({ setCoordinates, setBounds, coordinates, places, setChildClicked, weatherData }){\n    const classes = useStyles();\n    const isDesktop = useMediaQuery('(min-width: 600px)');\n\n    return (\n        <div className={classes.mapContainer}>\n            <GoogleMapReact\n                bootstrapURLKeys = {{key: 'AIzaSyASOkRIRbXtXgPUxtpKGKORkNZ2-mTvrZQ'}}\n                defaultCenter = {coordinates}\n                center = {coordinates}\n                defaultZoom = {14}\n                margin = {[50, 50, 50, 50]}\n                options = {''}\n                onChange = {(event) =>{\n                    setCoordinates({ lat: event.center.lat, lng: event.center.lng });\n                    setBounds({ ne: event.marginBounds.ne, sw: event.marginBounds.sw });\n                }}\n                onChildClick = {(child) =>{ setChildClicked(child) }}\n            >\n                {places?.map((place, i) =>(\n                    <div\n                        className = {classes.markerContainer}\n                        lat = {Number(place.latitude)}\n                        lng = {Number(place.longitude)}\n                        key = {i}\n                        >\n                            {!isDesktop ? (\n                                <LocationOnOutlined color=\"primary\" fontSize=\"large\" />\n                            ) : (\n                                <Paper elevation={3} className={classes.paper}>\n                                    <Typography gutterBottom variant=\"subtitle2\" className={classes.typography}>\n                                        {place.name}\n                                    </Typography>\n                                    <img\n                                        className={classes.pointer}\n                                        src= {place.photo ? place.photo.images.large.url : 'https://images.pexels.com/photos/262978/pexels-photo-262978.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2'}\n                                        alt = {place.name}\n                                    />\n                                    <Rating size=\"small\" value={Number(place.rating)} readOnly />\n                                </Paper>\n                            )}\n                    </div>\n                ))}\n                \n                {weatherData?.list?.map((data, i) => (\n                    <div key={i} lat={data.coord.lat} lng={data.coord.lon}>\n                        <img src={`https://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png`} />\n                    </div>\n                ))}\n            </GoogleMapReact>\n        </div>\n    )\n}\n\nexport default Map;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}