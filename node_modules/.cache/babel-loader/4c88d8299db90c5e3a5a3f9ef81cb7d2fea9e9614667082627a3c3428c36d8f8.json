{"ast":null,"code":"import React from\"react\";import GoogleMapReact from\"google-map-react\";import{Paper,Typography,useMediaQuery}from\"@material-ui/core\";import LocationOnOutlined from\"@material-ui/icons/LocationOnOutlined\";import Rating from\"@material-ui/lab/Rating\";import useStyles from\"./styles.js\";import{DisabledByDefault}from\"@mui/icons-material\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Map(_ref){let{setCoordinates,setBounds,coordinates,places,setChildClicked/*weatherData*/}=_ref;const classes=useStyles();const isDesktop=useMediaQuery('(min-width: 600px)');return/*#__PURE__*/_jsx(\"div\",{className:classes.mapContainer,children:/*#__PURE__*/_jsx(GoogleMapReact,{bootstrapURLKeys:{key:process.env.REACT_APP_GOOGLE_MAPS_API_KEY},defaultCenter:coordinates,center:coordinates,defaultZoom:14,margin:[50,50,50,50],options:'',onChange:event=>{setCoordinates({lat:event.center.lat,lng:event.center.lng});setBounds({ne:event.marginBounds.ne,sw:event.marginBounds.sw});},onChildClick:child=>{setChildClicked(child);},children:places===null||places===void 0?void 0:places.map((place,i)=>/*#__PURE__*/_jsx(\"div\",{className:classes.markerContainer,lat:Number(place.latitude),lng:Number(place.longitude),children:!isDesktop?/*#__PURE__*/_jsx(LocationOnOutlined,{color:\"primary\",fontSize:\"large\"}):/*#__PURE__*/_jsxs(Paper,{elevation:3,className:classes.paper,children:[/*#__PURE__*/_jsx(Typography,{gutterBottom:true,variant:\"subtitle2\",className:classes.typography,children:place.name}),/*#__PURE__*/_jsx(\"img\",{className:classes.pointer,src:place.photo?place.photo.images.large.url:'https://images.pexels.com/photos/262978/pexels-photo-262978.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',alt:place.name}),/*#__PURE__*/_jsx(Rating,{size:\"small\",value:Number(place.rating),readOnly:true})]})},i))})});}export default Map;","map":{"version":3,"names":["React","GoogleMapReact","Paper","Typography","useMediaQuery","LocationOnOutlined","Rating","useStyles","DisabledByDefault","jsx","_jsx","jsxs","_jsxs","Map","_ref","setCoordinates","setBounds","coordinates","places","setChildClicked","classes","isDesktop","className","mapContainer","children","bootstrapURLKeys","key","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","defaultCenter","center","defaultZoom","margin","options","onChange","event","lat","lng","ne","marginBounds","sw","onChildClick","child","map","place","i","markerContainer","Number","latitude","longitude","color","fontSize","elevation","paper","gutterBottom","variant","typography","name","pointer","src","photo","images","large","url","alt","size","value","rating","readOnly"],"sources":["/Users/navaneethsathyan/Desktop/travel_advisor/src/components/Map/Map.jsx"],"sourcesContent":["import React from \"react\";\n\nimport GoogleMapReact from \"google-map-react\";\nimport { Paper, Typography, useMediaQuery } from \"@material-ui/core\";\nimport LocationOnOutlined from \"@material-ui/icons/LocationOnOutlined\";\nimport Rating from \"@material-ui/lab/Rating\";\n\nimport useStyles from \"./styles.js\";\nimport { DisabledByDefault } from \"@mui/icons-material\";\n\nfunction Map({ setCoordinates, setBounds, coordinates, places, setChildClicked, /*weatherData*/ }){\n    const classes = useStyles();\n    const isDesktop = useMediaQuery('(min-width: 600px)');\n\n    return (\n        <div className={classes.mapContainer}>\n            <GoogleMapReact\n                bootstrapURLKeys = {{key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY}}\n                defaultCenter = {coordinates}\n                center = {coordinates}\n                defaultZoom = {14}\n                margin = {[50, 50, 50, 50]}\n                options = {''}\n                onChange = {(event) =>{\n                    setCoordinates({ lat: event.center.lat, lng: event.center.lng });\n                    setBounds({ ne: event.marginBounds.ne, sw: event.marginBounds.sw });\n                }}\n                onChildClick = {(child) =>{ setChildClicked(child) }}\n            >\n                {places?.map((place, i) =>(\n                    <div\n                        className = {classes.markerContainer}\n                        lat = {Number(place.latitude)}\n                        lng = {Number(place.longitude)}\n                        key = {i}\n                        >\n                            {!isDesktop ? (\n                                <LocationOnOutlined color=\"primary\" fontSize=\"large\" />\n                            ) : (\n                                <Paper elevation={3} className={classes.paper}>\n                                    <Typography gutterBottom variant=\"subtitle2\" className={classes.typography}>\n                                        {place.name}\n                                    </Typography>\n                                    <img\n                                        className={classes.pointer}\n                                        src= {place.photo ? place.photo.images.large.url : 'https://images.pexels.com/photos/262978/pexels-photo-262978.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2'}\n                                        alt = {place.name}\n                                    />\n                                    <Rating size=\"small\" value={Number(place.rating)} readOnly />\n                                </Paper>\n                            )}\n                    </div>\n                ))}\n                \n                {/*weatherData?.list?.map((data, i) => (\n                    <div key={i} lat={data.coord.lat} lng={data.coord.lon}>\n                        <img src={`https://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png`} />\n                    </div>\n                ))*/}\n            </GoogleMapReact>\n        </div>\n    )\n}\n\nexport default Map;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}