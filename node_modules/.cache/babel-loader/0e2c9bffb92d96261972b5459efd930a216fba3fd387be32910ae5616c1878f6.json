{"ast":null,"code":"import axios from \"axios\";\nexport const getPlacesData = async (type, sw, ne) => {\n  try {\n    const {\n      data: {\n        data\n      }\n    } = await axios.get(`https://travel-advisor.p.rapidapi.com/${type}/list-in-boundary`, {\n      params: {\n        bl_latitude: sw.lat,\n        tr_latitude: ne.lat,\n        bl_longitude: sw.lng,\n        tr_longitude: ne.lng\n      },\n      headers: {\n        'x-rapidapi-key': 'deb7d45042msh2bb1b8af570064bp1f7b65jsn58f33f745665',\n        'x-rapidapi-host': 'travel-advisor.p.rapidapi.com'\n      }\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n/*export const getWeatherData = async(lat, lng) =>{\n  try {\n    const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather`, \n      {\n        params: {\n          lat: lat,\n          lon: lng,\n          appid: 'a3cb5585c9ccf251ca12bfcf2c93c238',\n        }\n      }\n    );\n    return response.data;\n    \n  } catch (error) {\n    console.log(error);\n  }\n}*/","map":{"version":3,"names":["axios","getPlacesData","type","sw","ne","data","get","params","bl_latitude","lat","tr_latitude","bl_longitude","lng","tr_longitude","headers","error","console","log"],"sources":["/Users/navaneethsathyan/Desktop/travel_advisor/src/api/index.js"],"sourcesContent":["import axios from \"axios\";\n\n\nexport const getPlacesData = async(type, sw, ne) =>{\n    try {\n        const {data: {data}} = await axios.get(`https://travel-advisor.p.rapidapi.com/${type}/list-in-boundary`, {\n          params: {\n            bl_latitude: sw.lat,\n            tr_latitude: ne.lat,\n            bl_longitude: sw.lng,\n            tr_longitude: ne.lng,\n          },\n          headers: {\n            'x-rapidapi-key': 'deb7d45042msh2bb1b8af570064bp1f7b65jsn58f33f745665',\n            'x-rapidapi-host': 'travel-advisor.p.rapidapi.com'\n          }\n        });\n        return data;\n        \n    } catch (error) {\n        console.log(error);\n    }\n}\n\n/*export const getWeatherData = async(lat, lng) =>{\n  try {\n    const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather`, \n      {\n        params: {\n          lat: lat,\n          lon: lng,\n          appid: 'a3cb5585c9ccf251ca12bfcf2c93c238',\n        }\n      }\n    );\n    return response.data;\n    \n  } catch (error) {\n    console.log(error);\n  }\n}*/\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAMC,IAAI,EAAEC,EAAE,EAAEC,EAAE,KAAI;EAC/C,IAAI;IACA,MAAM;MAACC,IAAI,EAAE;QAACA;MAAI;IAAC,CAAC,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,yCAAyCJ,IAAI,mBAAmB,EAAE;MACvGK,MAAM,EAAE;QACNC,WAAW,EAAEL,EAAE,CAACM,GAAG;QACnBC,WAAW,EAAEN,EAAE,CAACK,GAAG;QACnBE,YAAY,EAAER,EAAE,CAACS,GAAG;QACpBC,YAAY,EAAET,EAAE,CAACQ;MACnB,CAAC;MACDE,OAAO,EAAE;QACP,gBAAgB,EAAE,oDAAoD;QACtE,iBAAiB,EAAE;MACrB;IACF,CAAC,CAAC;IACF,OAAOT,IAAI;EAEf,CAAC,CAAC,OAAOU,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}